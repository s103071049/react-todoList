{"version":3,"sources":["component/TodoItem.js","component/FilterList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","$isDone","TodoItemButton","Button","button","TodoItem","todo","handleDeleteTodo","handleToggleIsDone","id","isDone","content","onClick","FilterTodo","FilterList","FilterButton","handleClearAll","TodoWrapper","Title","AddTodo","App","useState","todos","setTodos","value","setValue","filter","setFilter","map","FilterMap","All","Active","Completed","Object","keys","name","handleFilter","type","placeholder","onChange","e","target","alert","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f95e2b7.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst TodoItemWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`\n\nconst TodoContent = styled.div`\n  display: flex;\n  border: 1px solid gray;\n  padding: 6px;\n  border-radius: 4px;\n  width: 700px;\n  position: relative;\n  ${props => props.$isDone && `text-decoration: line-through`}\n`\n\nconst TodoItemButton = styled.div`\n position: absolute;\n right: 4px;\n`\n\nconst Button = styled.button`\n  margin-left: 4px;\n`\n\nexport default function TodoItem({todo, handleDeleteTodo, handleToggleIsDone}) {\n  return (\n    <div>\n      <TodoItemWrapper data-todo-id={todo.id}>\n        <TodoContent $isDone={todo.isDone}>\n          {todo.content} \n          <TodoItemButton>\n            <Button onClick={() => { handleDeleteTodo(todo.id)} }>刪除</Button>\n            <Button onClick={() => {handleToggleIsDone(todo.id)}}>{todo.isDone ? \"未完成\" : \"已完成\" }</Button>\n          </TodoItemButton>\n        </TodoContent>\n      </TodoItemWrapper>\n    </div>\n  )\n}","import styled from 'styled-components'\n\nconst FilterTodo = styled.div``\n\nconst Button = styled.button`\n  margin-left: 4px;\n`\n\nexport default function FilterList({FilterButton, handleClearAll}) {\n  return (\n    <div>\n      <FilterTodo>\n        {FilterButton}\n        <Button onClick={handleClearAll}>清空</Button>\n      </FilterTodo>\n    </div>\n  )\n}","import {useState} from 'react'\nimport styled from 'styled-components'\nimport TodoItem from './component/TodoItem.js'\nimport FilterList from './component/FilterList.js'\nconst TodoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border: 1px solid gray;\n  margin-bottom: 24px;\n`\nconst Title = styled.div`\n  font-size: 36px;\n`\nconst AddTodo = styled.div`\n  margin-bottom: 12px;\n`\nconst Button = styled.button`\n  margin-left: 4px;\n`\n\nlet id = 2\nfunction App() {\n  const [todos, setTodos] = useState([{id:0, content: 'done', isDone: true}, {id:1, content: 'not done', isDone: false}])\n  const [value, setValue] = useState('')\n  const [filter, setFilter] = useState('All')\n  // 新增\n  const handleAddTodo = () => {\n    if (!value) {\n      return alert('尚未輸入內容')\n    }\n    setTodos([{\n      id, content: value\n    }, ...todos])\n    setValue('')\n    id ++\n  }\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n  // 刪除\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n  // mark\n  const handleToggleIsDone = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      }\n    }))\n  }\n  // 清空\n  const handleClearAll = () => {\n    setTodos([])\n  }\n  // filter 功能\n  const handleFilter = (name) => {\n    setFilter(name)\n  }\n  const FilterMap = {\n  All: () => true,\n  Active: todo => !todo.isDone,\n  Completed: todo => todo.isDone\n  }\n  const FilterNames = Object.keys(FilterMap)\n  const FilterButton = FilterNames.map(name => (\n  <Button key={name} name={name} onClick={() => {handleFilter(name)}}>{name}</Button>\n  ))\n  return (\n    <div>\n      <TodoWrapper>\n        <Title>Todo List</Title>\n        <AddTodo>\n          <input type=\"text\" placeholder=\"請輸入代辦事項\" value={value} onChange={handleInputChange} />\n          <Button onClick={handleAddTodo}>新增</Button>\n        </AddTodo>\n        <FilterList handleClearAll={handleClearAll} FilterButton={FilterButton}/>\n      </TodoWrapper>\n        {todos.filter(FilterMap[filter]).map((todo) => \n          <TodoItem key={todo.id} todo={todo} handleDeleteTodo={handleDeleteTodo} handleToggleIsDone={handleToggleIsDone}/>)\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}